---

#
# Check
#

- name: Check if we've already downloaded memcached {{ memcached.version }}
  stat:
    path: "/usr/local/src/memcached-{{ memcached.version }}.tar.gz"
  register: memcached_file_check

- name: Stop memcached service if running before install
  systemd:
    name: memcached
    state: stopped
  register: service_status_memcached
  ignore_errors: true


#
# Install
#

- name: Download memcached {{ memcached.version }}.tar.gz
  get_url:
    url: "{{ memcached.download_url }}"
    dest: "/usr/local/src/memcached-{{ memcached.version }}.tar.gz"
  when: memcached_file_check.stat.exists == false

- name: Unzip memcached {{ memcached.version }}.tar.gz
  unarchive:
    src: /usr/local/src/memcached-{{ memcached.version }}.tar.gz
    dest: /usr/local/src
    copy: no
    owner: root
    group: root

- name: Configure memcached {{ memcached.version }}
  shell: ./configure --prefix={{ memcached.install_prefix }}
  args:
    chdir: /usr/local/src/memcached-{{ memcached.version }}

- name: Run memcached make
  shell: make -j$(nproc)
  args:
    chdir: /usr/local/src/memcached-{{ memcached.version }}

- name: Run memcached make install
  command: make install
  args:
    chdir: /usr/local/src/memcached-{{ memcached.version }}

## copy in ansible defaults to src being the ansible controller to the remote node, we need true since the src is remote
- name: Copy memcached binary to /usr/bin
  copy: 
    src: "{{ memcached.install_prefix }}/bin/memcached" 
    dest: /usr/bin/memcached 
    force: yes 
    mode: 0755 
    remote_src: yes

- name: Restart memcached service if running before install
  systemd:
    name: memcached
    state: started
  ignore_errors: true
  when: service_status_memcached.failed == false and service_status_memcached.state == 'stopped'
