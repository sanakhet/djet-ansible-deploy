---


#
# Check
#

- name: Check if we've already downloaded PHP {{ php8.version }}
  stat: path=/usr/local/src/php-{{ php8.version }}.tar.xz
  register: php8_file_check

- name: Stop php8-fpm service if running before install
  systemd:
    name: php8-fpm
    state: stopped
  register: service_status_php8_fpm
  ignore_errors: true

#
# Extract
#

# Disabled due to an ansible-php interaction that seems to lead to 503 errors each time we attempt to download?
#- name: Download php8-{{ php8.version }}.tar.xz
#  get_url:
#    url: "{{ php8.download_url }}"
#    dest: "/usr/local/src/php8-{{ php8.version }}.tar.xz"
#  when: php8_file_check.stat.exists == false

- name: Copy PHP {{ php8.version }}
  get_url:
    url: "{{ php8.download_url }}"
    dest: "/usr/local/src/php-{{ php8.version }}.tar.xz"
  when: php8_file_check.stat.exists == false

- name: Check if we've already extracted PHP {{ php8.version }}
  stat:
    path: "/usr/local/src/php-{{ php8.version }}"
  register: php8_extract_check

- name: Remove extracted PHP {{ php8.version }} if it exists
  file:
    path: "/usr/local/src/php-{{ php8.version }}"
    state: absent
  when: php8_extract_check.stat.exists == true

- name: Extract PHP {{ php8.version }}
  unarchive:
    src: "/usr/local/src/php-{{ php8.version }}.tar.xz"
    dest: "/usr/local/src"
    creates: "/usr/local/src/php-{{ php8.version }}"
    copy: no
    owner: root
    group: root


#
# Run
#

- name: Install necessary packages
  apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - libfcgi-dev
      - libssl-dev
      - libcrypto++-dev
      - libxml2-dev
      - libpspell-dev
      - libjpeg-dev
      - libfreetype6-dev
      - libmcrypt-dev
      - libtidy-dev
      - libmemcached-dev
      - libpng-dev
      - libcurl4-openssl-dev
      - libreadline-dev
      - libyaml-dev
      - libwebp-dev
      - libzip-dev
      - libonig-dev             # Oniguruma, required by mbstring in 7.4+
      - libsqlite3-dev          # Sqlite3 required by 7.4+

- name: Create the PHP modules directory
  file:
    path: "{{ php8.extension_dir }}"
    state: directory

- name: Configure
  shell: "PKG_CONFIG_PATH={{ curl.install_prefix }}/lib/pkgconfig:{{ openssl.install_prefix }}/lib/pkgconfig EXTENSION_DIR={{ php8.extension_dir }} ./configure --prefix={{ php8.install_prefix }} {{ php8.configure_options }}"
  args:
    chdir: "/usr/local/src/php-{{ php8.version }}"

- name: "Run make (WARNING: THIS WILL TAKE A LONG TIME)"
  shell: make -j$(nproc)
  args:
    chdir: "/usr/local/src/php-{{ php8.version }}"

- name: Run make install
  command: make install
  args:
    chdir: "/usr/local/src/php-{{ php8.version }}"

- name: Set up log dir permissions (any existing ones too)
  file: path=/var/log/php8 group=www-data mode="g+w" recurse=yes state=directory

- name: Make sure the log file exists
  file: path=/var/log/php8/php_errors.log group=www-data mode=777 state=touch

- name: Restart php8-fpm service if running before install
  systemd:
    name: php8-fpm
    state: started
  ignore_errors: true
  when: service_status_php8_fpm.failed == false and service_status_php8_fpm.state == 'stopped'
